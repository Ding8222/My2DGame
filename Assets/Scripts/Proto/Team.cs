// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Team.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NetData {

  /// <summary>Holder for reflection information generated from Team.proto</summary>
  public static partial class TeamReflection {

    #region Descriptor
    /// <summary>File descriptor for Team.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TeamReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CgpUZWFtLnByb3RvEgduZXREYXRhIjwKDlRlYW1NZW1iZXJJbmZvEgwKBEd1",
            "aWQYASABKAMSDAoETmFtZRgCIAEoCRIOCgZPbmxpbmUYAyABKAgiDAoKQ3Jl",
            "YXRlVGVhbSJZCg1DcmVhdGVUZWFtUmV0Eg0KBW5Db2RlGAEgASgFIjkKAkVD",
            "EgwKCEVDX09USEVSEAASCwoHRUNfU1VDQxABEgsKB0VDX0ZBSUwQAhILCgdF",
            "Q19URUFNEAQiGwoJQXBwbHlUZWFtEg4KBlRlYW1JRBgBIAEoBSJlCgxBcHBs",
            "eVRlYW1SZXQSDQoFbkNvZGUYASABKAUiRgoCRUMSDAoIRUNfT1RIRVIQABIL",
            "CgdFQ19TVUNDEAESCwoHRUNfRkFJTBACEgsKB0VDX1RFQU0QBBILCgdFQ19G",
            "SU5EEAUiMQoNQXBwbHlUZWFtVGlwcxISCgpQbGF5ZXJHdWlkGAEgASgDEgwK",
            "BE5hbWUYAiABKAkiNQoNQXBwbHlUZWFtTGlzdBIkCgRMaXN0GAEgAygLMhYu",
            "bmV0RGF0YS5BcHBseVRlYW1UaXBzIjYKEVJlc3BvbnNlQXBwbHlUZWFtEhIK",
            "ClBsYXllckd1aWQYASABKAMSDQoFQWdyZWUYAiABKAgiMwoUUmVzcG9uc2VB",
            "cHBseVRlYW1SZXQSDQoFQWdyZWUYASABKAgSDAoETmFtZRgCIAEoCSIgCgpJ",
            "bnZpdGVUZWFtEhIKClBsYXllckd1aWQYASABKAMiaAoNSW52aXRlVGVhbVJl",
            "dBINCgVuQ29kZRgBIAEoBSJICgJFQxIMCghFQ19PVEhFUhAAEgsKB0VDX1NV",
            "Q0MQARILCgdFQ19GQUlMEAISCwoHRUNfVEVBTRAEEg0KCUVDX0xFQURFUhAF",
            "IjIKDkludml0ZVRlYW1UaXBzEhIKClBsYXllckd1aWQYASABKAMSDAoETmFt",
            "ZRgCIAEoCSI3Cg5JbnZpdGVUZWFtTGlzdBIlCgRMaXN0GAEgAygLMhcubmV0",
            "RGF0YS5JbnZpdGVUZWFtVGlwcyI3ChJSZXNwb25zZUludml0ZVRlYW0SEgoK",
            "UGxheWVyR3VpZBgBIAEoAxINCgVBZ3JlZRgCIAEoCCI0ChVSZXNwb25zZUlu",
            "dml0ZVRlYW1SZXQSDQoFQWdyZWUYASABKAgSDAoETmFtZRgCIAEoCSIKCghF",
            "eGl0VGVhbSJXCgtFeGl0VGVhbVJldBINCgVuQ29kZRgBIAEoBSI5CgJFQxIM",
            "CghFQ19PVEhFUhAAEgsKB0VDX1NVQ0MQARILCgdFQ19GQUlMEAISCwoHRUNf",
            "VEVBTRAEIiQKDktpY2tUZWFtTWVtYmVyEhIKClBsYXllckd1aWQYASABKAMi",
            "VQoIVGVhbUluZm8SDgoGVGVhbUlEGAEgASgFEhIKCkxlYWRlckd1aWQYAiAB",
            "KAMSJQoESW5mbxgDIAMoCzIXLm5ldERhdGEuVGVhbU1lbWJlckluZm8iSgoU",
            "VXBkYXRlVGVhbU1lbWJlckluZm8SCwoDQWRkGAEgASgIEiUKBEluZm8YAiAB",
            "KAsyFy5uZXREYXRhLlRlYW1NZW1iZXJJbmZvIhEKD0Rpc3NvbHV0aW9uVGVh",
            "bWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.TeamMemberInfo), global::NetData.TeamMemberInfo.Parser, new[]{ "Guid", "Name", "Online" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.CreateTeam), global::NetData.CreateTeam.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.CreateTeamRet), global::NetData.CreateTeamRet.Parser, new[]{ "NCode" }, null, new[]{ typeof(global::NetData.CreateTeamRet.Types.EC) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ApplyTeam), global::NetData.ApplyTeam.Parser, new[]{ "TeamID" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ApplyTeamRet), global::NetData.ApplyTeamRet.Parser, new[]{ "NCode" }, null, new[]{ typeof(global::NetData.ApplyTeamRet.Types.EC) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ApplyTeamTips), global::NetData.ApplyTeamTips.Parser, new[]{ "PlayerGuid", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ApplyTeamList), global::NetData.ApplyTeamList.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ResponseApplyTeam), global::NetData.ResponseApplyTeam.Parser, new[]{ "PlayerGuid", "Agree" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ResponseApplyTeamRet), global::NetData.ResponseApplyTeamRet.Parser, new[]{ "Agree", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.InviteTeam), global::NetData.InviteTeam.Parser, new[]{ "PlayerGuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.InviteTeamRet), global::NetData.InviteTeamRet.Parser, new[]{ "NCode" }, null, new[]{ typeof(global::NetData.InviteTeamRet.Types.EC) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.InviteTeamTips), global::NetData.InviteTeamTips.Parser, new[]{ "PlayerGuid", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.InviteTeamList), global::NetData.InviteTeamList.Parser, new[]{ "List" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ResponseInviteTeam), global::NetData.ResponseInviteTeam.Parser, new[]{ "PlayerGuid", "Agree" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ResponseInviteTeamRet), global::NetData.ResponseInviteTeamRet.Parser, new[]{ "Agree", "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ExitTeam), global::NetData.ExitTeam.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.ExitTeamRet), global::NetData.ExitTeamRet.Parser, new[]{ "NCode" }, null, new[]{ typeof(global::NetData.ExitTeamRet.Types.EC) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.KickTeamMember), global::NetData.KickTeamMember.Parser, new[]{ "PlayerGuid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.TeamInfo), global::NetData.TeamInfo.Parser, new[]{ "TeamID", "LeaderGuid", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.UpdateTeamMemberInfo), global::NetData.UpdateTeamMemberInfo.Parser, new[]{ "Add", "Info" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetData.DissolutionTeam), global::NetData.DissolutionTeam.Parser, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 队伍成员信息
  /// </summary>
  public sealed partial class TeamMemberInfo : pb::IMessage<TeamMemberInfo> {
    private static readonly pb::MessageParser<TeamMemberInfo> _parser = new pb::MessageParser<TeamMemberInfo>(() => new TeamMemberInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamMemberInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamMemberInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamMemberInfo(TeamMemberInfo other) : this() {
      guid_ = other.guid_;
      name_ = other.name_;
      online_ = other.online_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamMemberInfo Clone() {
      return new TeamMemberInfo(this);
    }

    /// <summary>Field number for the "Guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private long guid_;
    /// <summary>
    /// 玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 玩家姓名
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Online" field.</summary>
    public const int OnlineFieldNumber = 3;
    private bool online_;
    /// <summary>
    /// 是否在线
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Online {
      get { return online_; }
      set {
        online_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamMemberInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamMemberInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Guid != other.Guid) return false;
      if (Name != other.Name) return false;
      if (Online != other.Online) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Guid != 0L) hash ^= Guid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Online != false) hash ^= Online.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Guid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Guid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Online != false) {
        output.WriteRawTag(24);
        output.WriteBool(Online);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Guid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Guid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Online != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamMemberInfo other) {
      if (other == null) {
        return;
      }
      if (other.Guid != 0L) {
        Guid = other.Guid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Online != false) {
        Online = other.Online;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Guid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Online = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-1 创建队伍
  /// </summary>
  public sealed partial class CreateTeam : pb::IMessage<CreateTeam> {
    private static readonly pb::MessageParser<CreateTeam> _parser = new pb::MessageParser<CreateTeam>(() => new CreateTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTeam(CreateTeam other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTeam Clone() {
      return new CreateTeam(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTeam other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 4-2 创建队伍返回
  /// </summary>
  public sealed partial class CreateTeamRet : pb::IMessage<CreateTeamRet> {
    private static readonly pb::MessageParser<CreateTeamRet> _parser = new pb::MessageParser<CreateTeamRet>(() => new CreateTeamRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTeamRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTeamRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTeamRet(CreateTeamRet other) : this() {
      nCode_ = other.nCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTeamRet Clone() {
      return new CreateTeamRet(this);
    }

    /// <summary>Field number for the "nCode" field.</summary>
    public const int NCodeFieldNumber = 1;
    private int nCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NCode {
      get { return nCode_; }
      set {
        nCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTeamRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTeamRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NCode != other.NCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NCode != 0) hash ^= NCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTeamRet other) {
      if (other == null) {
        return;
      }
      if (other.NCode != 0) {
        NCode = other.NCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NCode = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the CreateTeamRet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EC {
        [pbr::OriginalName("EC_OTHER")] Other = 0,
        [pbr::OriginalName("EC_SUCC")] Succ = 1,
        [pbr::OriginalName("EC_FAIL")] Fail = 2,
        /// <summary>
        /// 已经有队伍了
        /// </summary>
        [pbr::OriginalName("EC_TEAM")] Team = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// 4-3 申请加入队伍
  /// </summary>
  public sealed partial class ApplyTeam : pb::IMessage<ApplyTeam> {
    private static readonly pb::MessageParser<ApplyTeam> _parser = new pb::MessageParser<ApplyTeam>(() => new ApplyTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeam(ApplyTeam other) : this() {
      teamID_ = other.teamID_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeam Clone() {
      return new ApplyTeam(this);
    }

    /// <summary>Field number for the "TeamID" field.</summary>
    public const int TeamIDFieldNumber = 1;
    private int teamID_;
    /// <summary>
    /// 队伍ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TeamID {
      get { return teamID_; }
      set {
        teamID_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamID != other.TeamID) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamID != 0) hash ^= TeamID.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TeamID);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamID);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyTeam other) {
      if (other == null) {
        return;
      }
      if (other.TeamID != 0) {
        TeamID = other.TeamID;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamID = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-4 申请加入队伍返回
  /// </summary>
  public sealed partial class ApplyTeamRet : pb::IMessage<ApplyTeamRet> {
    private static readonly pb::MessageParser<ApplyTeamRet> _parser = new pb::MessageParser<ApplyTeamRet>(() => new ApplyTeamRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyTeamRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeamRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeamRet(ApplyTeamRet other) : this() {
      nCode_ = other.nCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeamRet Clone() {
      return new ApplyTeamRet(this);
    }

    /// <summary>Field number for the "nCode" field.</summary>
    public const int NCodeFieldNumber = 1;
    private int nCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NCode {
      get { return nCode_; }
      set {
        nCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyTeamRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyTeamRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NCode != other.NCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NCode != 0) hash ^= NCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyTeamRet other) {
      if (other == null) {
        return;
      }
      if (other.NCode != 0) {
        NCode = other.NCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NCode = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ApplyTeamRet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EC {
        [pbr::OriginalName("EC_OTHER")] Other = 0,
        [pbr::OriginalName("EC_SUCC")] Succ = 1,
        [pbr::OriginalName("EC_FAIL")] Fail = 2,
        /// <summary>
        /// 已经有队伍了
        /// </summary>
        [pbr::OriginalName("EC_TEAM")] Team = 4,
        /// <summary>
        /// 不存在的队伍
        /// </summary>
        [pbr::OriginalName("EC_FIND")] Find = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// 4-5 申请入队提示
  /// </summary>
  public sealed partial class ApplyTeamTips : pb::IMessage<ApplyTeamTips> {
    private static readonly pb::MessageParser<ApplyTeamTips> _parser = new pb::MessageParser<ApplyTeamTips>(() => new ApplyTeamTips());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyTeamTips> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeamTips() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeamTips(ApplyTeamTips other) : this() {
      playerGuid_ = other.playerGuid_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeamTips Clone() {
      return new ApplyTeamTips(this);
    }

    /// <summary>Field number for the "PlayerGuid" field.</summary>
    public const int PlayerGuidFieldNumber = 1;
    private long playerGuid_;
    /// <summary>
    /// 申请人guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerGuid {
      get { return playerGuid_; }
      set {
        playerGuid_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 申请人名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyTeamTips);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyTeamTips other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGuid != other.PlayerGuid) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGuid != 0L) hash ^= PlayerGuid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerGuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerGuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerGuid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyTeamTips other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGuid != 0L) {
        PlayerGuid = other.PlayerGuid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGuid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-6 申请列表
  /// </summary>
  public sealed partial class ApplyTeamList : pb::IMessage<ApplyTeamList> {
    private static readonly pb::MessageParser<ApplyTeamList> _parser = new pb::MessageParser<ApplyTeamList>(() => new ApplyTeamList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ApplyTeamList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeamList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeamList(ApplyTeamList other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ApplyTeamList Clone() {
      return new ApplyTeamList(this);
    }

    /// <summary>Field number for the "List" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::NetData.ApplyTeamTips> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::NetData.ApplyTeamTips.Parser);
    private readonly pbc::RepeatedField<global::NetData.ApplyTeamTips> list_ = new pbc::RepeatedField<global::NetData.ApplyTeamTips>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NetData.ApplyTeamTips> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ApplyTeamList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ApplyTeamList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ApplyTeamList other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-7 回应入队申请
  /// </summary>
  public sealed partial class ResponseApplyTeam : pb::IMessage<ResponseApplyTeam> {
    private static readonly pb::MessageParser<ResponseApplyTeam> _parser = new pb::MessageParser<ResponseApplyTeam>(() => new ResponseApplyTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseApplyTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseApplyTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseApplyTeam(ResponseApplyTeam other) : this() {
      playerGuid_ = other.playerGuid_;
      agree_ = other.agree_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseApplyTeam Clone() {
      return new ResponseApplyTeam(this);
    }

    /// <summary>Field number for the "PlayerGuid" field.</summary>
    public const int PlayerGuidFieldNumber = 1;
    private long playerGuid_;
    /// <summary>
    /// 玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerGuid {
      get { return playerGuid_; }
      set {
        playerGuid_ = value;
      }
    }

    /// <summary>Field number for the "Agree" field.</summary>
    public const int AgreeFieldNumber = 2;
    private bool agree_;
    /// <summary>
    /// 是否同意
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Agree {
      get { return agree_; }
      set {
        agree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseApplyTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseApplyTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGuid != other.PlayerGuid) return false;
      if (Agree != other.Agree) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGuid != 0L) hash ^= PlayerGuid.GetHashCode();
      if (Agree != false) hash ^= Agree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerGuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerGuid);
      }
      if (Agree != false) {
        output.WriteRawTag(16);
        output.WriteBool(Agree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerGuid);
      }
      if (Agree != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseApplyTeam other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGuid != 0L) {
        PlayerGuid = other.PlayerGuid;
      }
      if (other.Agree != false) {
        Agree = other.Agree;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGuid = input.ReadInt64();
            break;
          }
          case 16: {
            Agree = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-8 申请人收到的申请返回
  /// </summary>
  public sealed partial class ResponseApplyTeamRet : pb::IMessage<ResponseApplyTeamRet> {
    private static readonly pb::MessageParser<ResponseApplyTeamRet> _parser = new pb::MessageParser<ResponseApplyTeamRet>(() => new ResponseApplyTeamRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseApplyTeamRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseApplyTeamRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseApplyTeamRet(ResponseApplyTeamRet other) : this() {
      agree_ = other.agree_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseApplyTeamRet Clone() {
      return new ResponseApplyTeamRet(this);
    }

    /// <summary>Field number for the "Agree" field.</summary>
    public const int AgreeFieldNumber = 1;
    private bool agree_;
    /// <summary>
    /// 是否同意
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Agree {
      get { return agree_; }
      set {
        agree_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 审核人名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseApplyTeamRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseApplyTeamRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Agree != other.Agree) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Agree != false) hash ^= Agree.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Agree != false) {
        output.WriteRawTag(8);
        output.WriteBool(Agree);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Agree != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseApplyTeamRet other) {
      if (other == null) {
        return;
      }
      if (other.Agree != false) {
        Agree = other.Agree;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Agree = input.ReadBool();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-9 邀请玩家入队
  /// </summary>
  public sealed partial class InviteTeam : pb::IMessage<InviteTeam> {
    private static readonly pb::MessageParser<InviteTeam> _parser = new pb::MessageParser<InviteTeam>(() => new InviteTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeam(InviteTeam other) : this() {
      playerGuid_ = other.playerGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeam Clone() {
      return new InviteTeam(this);
    }

    /// <summary>Field number for the "PlayerGuid" field.</summary>
    public const int PlayerGuidFieldNumber = 1;
    private long playerGuid_;
    /// <summary>
    /// 玩家guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerGuid {
      get { return playerGuid_; }
      set {
        playerGuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGuid != other.PlayerGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGuid != 0L) hash ^= PlayerGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerGuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteTeam other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGuid != 0L) {
        PlayerGuid = other.PlayerGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGuid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-10 邀请玩家入队返回
  /// </summary>
  public sealed partial class InviteTeamRet : pb::IMessage<InviteTeamRet> {
    private static readonly pb::MessageParser<InviteTeamRet> _parser = new pb::MessageParser<InviteTeamRet>(() => new InviteTeamRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteTeamRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeamRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeamRet(InviteTeamRet other) : this() {
      nCode_ = other.nCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeamRet Clone() {
      return new InviteTeamRet(this);
    }

    /// <summary>Field number for the "nCode" field.</summary>
    public const int NCodeFieldNumber = 1;
    private int nCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NCode {
      get { return nCode_; }
      set {
        nCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteTeamRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteTeamRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NCode != other.NCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NCode != 0) hash ^= NCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteTeamRet other) {
      if (other == null) {
        return;
      }
      if (other.NCode != 0) {
        NCode = other.NCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NCode = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the InviteTeamRet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EC {
        [pbr::OriginalName("EC_OTHER")] Other = 0,
        [pbr::OriginalName("EC_SUCC")] Succ = 1,
        [pbr::OriginalName("EC_FAIL")] Fail = 2,
        /// <summary>
        /// 已经有队伍了
        /// </summary>
        [pbr::OriginalName("EC_TEAM")] Team = 4,
        /// <summary>
        /// 不是队长
        /// </summary>
        [pbr::OriginalName("EC_LEADER")] Leader = 5,
      }

    }
    #endregion

  }

  /// <summary>
  /// 4-11 邀请提示
  /// </summary>
  public sealed partial class InviteTeamTips : pb::IMessage<InviteTeamTips> {
    private static readonly pb::MessageParser<InviteTeamTips> _parser = new pb::MessageParser<InviteTeamTips>(() => new InviteTeamTips());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteTeamTips> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeamTips() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeamTips(InviteTeamTips other) : this() {
      playerGuid_ = other.playerGuid_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeamTips Clone() {
      return new InviteTeamTips(this);
    }

    /// <summary>Field number for the "PlayerGuid" field.</summary>
    public const int PlayerGuidFieldNumber = 1;
    private long playerGuid_;
    /// <summary>
    /// 邀请人guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerGuid {
      get { return playerGuid_; }
      set {
        playerGuid_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 邀请人名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteTeamTips);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteTeamTips other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGuid != other.PlayerGuid) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGuid != 0L) hash ^= PlayerGuid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerGuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerGuid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerGuid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteTeamTips other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGuid != 0L) {
        PlayerGuid = other.PlayerGuid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGuid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-12 邀请列表
  /// </summary>
  public sealed partial class InviteTeamList : pb::IMessage<InviteTeamList> {
    private static readonly pb::MessageParser<InviteTeamList> _parser = new pb::MessageParser<InviteTeamList>(() => new InviteTeamList());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<InviteTeamList> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeamList() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeamList(InviteTeamList other) : this() {
      list_ = other.list_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public InviteTeamList Clone() {
      return new InviteTeamList(this);
    }

    /// <summary>Field number for the "List" field.</summary>
    public const int ListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::NetData.InviteTeamTips> _repeated_list_codec
        = pb::FieldCodec.ForMessage(10, global::NetData.InviteTeamTips.Parser);
    private readonly pbc::RepeatedField<global::NetData.InviteTeamTips> list_ = new pbc::RepeatedField<global::NetData.InviteTeamTips>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NetData.InviteTeamTips> List {
      get { return list_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as InviteTeamList);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(InviteTeamList other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!list_.Equals(other.list_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= list_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      list_.WriteTo(output, _repeated_list_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += list_.CalculateSize(_repeated_list_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(InviteTeamList other) {
      if (other == null) {
        return;
      }
      list_.Add(other.list_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            list_.AddEntriesFrom(input, _repeated_list_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-13 回应入队邀请
  /// </summary>
  public sealed partial class ResponseInviteTeam : pb::IMessage<ResponseInviteTeam> {
    private static readonly pb::MessageParser<ResponseInviteTeam> _parser = new pb::MessageParser<ResponseInviteTeam>(() => new ResponseInviteTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseInviteTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseInviteTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseInviteTeam(ResponseInviteTeam other) : this() {
      playerGuid_ = other.playerGuid_;
      agree_ = other.agree_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseInviteTeam Clone() {
      return new ResponseInviteTeam(this);
    }

    /// <summary>Field number for the "PlayerGuid" field.</summary>
    public const int PlayerGuidFieldNumber = 1;
    private long playerGuid_;
    /// <summary>
    /// 邀请人guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerGuid {
      get { return playerGuid_; }
      set {
        playerGuid_ = value;
      }
    }

    /// <summary>Field number for the "Agree" field.</summary>
    public const int AgreeFieldNumber = 2;
    private bool agree_;
    /// <summary>
    /// 是否同意
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Agree {
      get { return agree_; }
      set {
        agree_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseInviteTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseInviteTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGuid != other.PlayerGuid) return false;
      if (Agree != other.Agree) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGuid != 0L) hash ^= PlayerGuid.GetHashCode();
      if (Agree != false) hash ^= Agree.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerGuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerGuid);
      }
      if (Agree != false) {
        output.WriteRawTag(16);
        output.WriteBool(Agree);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerGuid);
      }
      if (Agree != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseInviteTeam other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGuid != 0L) {
        PlayerGuid = other.PlayerGuid;
      }
      if (other.Agree != false) {
        Agree = other.Agree;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGuid = input.ReadInt64();
            break;
          }
          case 16: {
            Agree = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-14 邀请人收到的邀请返回
  /// </summary>
  public sealed partial class ResponseInviteTeamRet : pb::IMessage<ResponseInviteTeamRet> {
    private static readonly pb::MessageParser<ResponseInviteTeamRet> _parser = new pb::MessageParser<ResponseInviteTeamRet>(() => new ResponseInviteTeamRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseInviteTeamRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseInviteTeamRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseInviteTeamRet(ResponseInviteTeamRet other) : this() {
      agree_ = other.agree_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseInviteTeamRet Clone() {
      return new ResponseInviteTeamRet(this);
    }

    /// <summary>Field number for the "Agree" field.</summary>
    public const int AgreeFieldNumber = 1;
    private bool agree_;
    /// <summary>
    /// 是否同意
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Agree {
      get { return agree_; }
      set {
        agree_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// 被邀请人
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseInviteTeamRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseInviteTeamRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Agree != other.Agree) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Agree != false) hash ^= Agree.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Agree != false) {
        output.WriteRawTag(8);
        output.WriteBool(Agree);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Agree != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseInviteTeamRet other) {
      if (other == null) {
        return;
      }
      if (other.Agree != false) {
        Agree = other.Agree;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Agree = input.ReadBool();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-15 退出队伍
  /// </summary>
  public sealed partial class ExitTeam : pb::IMessage<ExitTeam> {
    private static readonly pb::MessageParser<ExitTeam> _parser = new pb::MessageParser<ExitTeam>(() => new ExitTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExitTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitTeam(ExitTeam other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitTeam Clone() {
      return new ExitTeam(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExitTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExitTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExitTeam other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  /// <summary>
  /// 4-16 退出队伍返回
  /// </summary>
  public sealed partial class ExitTeamRet : pb::IMessage<ExitTeamRet> {
    private static readonly pb::MessageParser<ExitTeamRet> _parser = new pb::MessageParser<ExitTeamRet>(() => new ExitTeamRet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExitTeamRet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitTeamRet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitTeamRet(ExitTeamRet other) : this() {
      nCode_ = other.nCode_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExitTeamRet Clone() {
      return new ExitTeamRet(this);
    }

    /// <summary>Field number for the "nCode" field.</summary>
    public const int NCodeFieldNumber = 1;
    private int nCode_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NCode {
      get { return nCode_; }
      set {
        nCode_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExitTeamRet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExitTeamRet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NCode != other.NCode) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NCode != 0) hash ^= NCode.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NCode != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(NCode);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NCode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NCode);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExitTeamRet other) {
      if (other == null) {
        return;
      }
      if (other.NCode != 0) {
        NCode = other.NCode;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            NCode = input.ReadInt32();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ExitTeamRet message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum EC {
        [pbr::OriginalName("EC_OTHER")] Other = 0,
        [pbr::OriginalName("EC_SUCC")] Succ = 1,
        [pbr::OriginalName("EC_FAIL")] Fail = 2,
        /// <summary>
        /// 没有队伍
        /// </summary>
        [pbr::OriginalName("EC_TEAM")] Team = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// 4-17 踢出玩家
  /// </summary>
  public sealed partial class KickTeamMember : pb::IMessage<KickTeamMember> {
    private static readonly pb::MessageParser<KickTeamMember> _parser = new pb::MessageParser<KickTeamMember>(() => new KickTeamMember());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<KickTeamMember> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickTeamMember() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickTeamMember(KickTeamMember other) : this() {
      playerGuid_ = other.playerGuid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public KickTeamMember Clone() {
      return new KickTeamMember(this);
    }

    /// <summary>Field number for the "PlayerGuid" field.</summary>
    public const int PlayerGuidFieldNumber = 1;
    private long playerGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PlayerGuid {
      get { return playerGuid_; }
      set {
        playerGuid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as KickTeamMember);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(KickTeamMember other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PlayerGuid != other.PlayerGuid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PlayerGuid != 0L) hash ^= PlayerGuid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PlayerGuid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PlayerGuid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PlayerGuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PlayerGuid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(KickTeamMember other) {
      if (other == null) {
        return;
      }
      if (other.PlayerGuid != 0L) {
        PlayerGuid = other.PlayerGuid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PlayerGuid = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-18 队伍信息
  /// </summary>
  public sealed partial class TeamInfo : pb::IMessage<TeamInfo> {
    private static readonly pb::MessageParser<TeamInfo> _parser = new pb::MessageParser<TeamInfo>(() => new TeamInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TeamInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInfo(TeamInfo other) : this() {
      teamID_ = other.teamID_;
      leaderGuid_ = other.leaderGuid_;
      info_ = other.info_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TeamInfo Clone() {
      return new TeamInfo(this);
    }

    /// <summary>Field number for the "TeamID" field.</summary>
    public const int TeamIDFieldNumber = 1;
    private int teamID_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int TeamID {
      get { return teamID_; }
      set {
        teamID_ = value;
      }
    }

    /// <summary>Field number for the "LeaderGuid" field.</summary>
    public const int LeaderGuidFieldNumber = 2;
    private long leaderGuid_;
    /// <summary>
    /// 队长guid
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LeaderGuid {
      get { return leaderGuid_; }
      set {
        leaderGuid_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 3;
    private static readonly pb::FieldCodec<global::NetData.TeamMemberInfo> _repeated_info_codec
        = pb::FieldCodec.ForMessage(26, global::NetData.TeamMemberInfo.Parser);
    private readonly pbc::RepeatedField<global::NetData.TeamMemberInfo> info_ = new pbc::RepeatedField<global::NetData.TeamMemberInfo>();
    /// <summary>
    /// 成员信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NetData.TeamMemberInfo> Info {
      get { return info_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TeamInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TeamInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TeamID != other.TeamID) return false;
      if (LeaderGuid != other.LeaderGuid) return false;
      if(!info_.Equals(other.info_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TeamID != 0) hash ^= TeamID.GetHashCode();
      if (LeaderGuid != 0L) hash ^= LeaderGuid.GetHashCode();
      hash ^= info_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TeamID != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(TeamID);
      }
      if (LeaderGuid != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(LeaderGuid);
      }
      info_.WriteTo(output, _repeated_info_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TeamID != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(TeamID);
      }
      if (LeaderGuid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LeaderGuid);
      }
      size += info_.CalculateSize(_repeated_info_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TeamInfo other) {
      if (other == null) {
        return;
      }
      if (other.TeamID != 0) {
        TeamID = other.TeamID;
      }
      if (other.LeaderGuid != 0L) {
        LeaderGuid = other.LeaderGuid;
      }
      info_.Add(other.info_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            TeamID = input.ReadInt32();
            break;
          }
          case 16: {
            LeaderGuid = input.ReadInt64();
            break;
          }
          case 26: {
            info_.AddEntriesFrom(input, _repeated_info_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-19 更新玩家信息
  /// </summary>
  public sealed partial class UpdateTeamMemberInfo : pb::IMessage<UpdateTeamMemberInfo> {
    private static readonly pb::MessageParser<UpdateTeamMemberInfo> _parser = new pb::MessageParser<UpdateTeamMemberInfo>(() => new UpdateTeamMemberInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTeamMemberInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTeamMemberInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTeamMemberInfo(UpdateTeamMemberInfo other) : this() {
      add_ = other.add_;
      info_ = other.info_ != null ? other.info_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTeamMemberInfo Clone() {
      return new UpdateTeamMemberInfo(this);
    }

    /// <summary>Field number for the "Add" field.</summary>
    public const int AddFieldNumber = 1;
    private bool add_;
    /// <summary>
    /// true 添加，false 更新
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Add {
      get { return add_; }
      set {
        add_ = value;
      }
    }

    /// <summary>Field number for the "Info" field.</summary>
    public const int InfoFieldNumber = 2;
    private global::NetData.TeamMemberInfo info_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetData.TeamMemberInfo Info {
      get { return info_; }
      set {
        info_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTeamMemberInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTeamMemberInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Add != other.Add) return false;
      if (!object.Equals(Info, other.Info)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Add != false) hash ^= Add.GetHashCode();
      if (info_ != null) hash ^= Info.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Add != false) {
        output.WriteRawTag(8);
        output.WriteBool(Add);
      }
      if (info_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Info);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Add != false) {
        size += 1 + 1;
      }
      if (info_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Info);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTeamMemberInfo other) {
      if (other == null) {
        return;
      }
      if (other.Add != false) {
        Add = other.Add;
      }
      if (other.info_ != null) {
        if (info_ == null) {
          info_ = new global::NetData.TeamMemberInfo();
        }
        Info.MergeFrom(other.Info);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Add = input.ReadBool();
            break;
          }
          case 18: {
            if (info_ == null) {
              info_ = new global::NetData.TeamMemberInfo();
            }
            input.ReadMessage(info_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// 4-20 队伍解散
  /// </summary>
  public sealed partial class DissolutionTeam : pb::IMessage<DissolutionTeam> {
    private static readonly pb::MessageParser<DissolutionTeam> _parser = new pb::MessageParser<DissolutionTeam>(() => new DissolutionTeam());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DissolutionTeam> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetData.TeamReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DissolutionTeam() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DissolutionTeam(DissolutionTeam other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DissolutionTeam Clone() {
      return new DissolutionTeam(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DissolutionTeam);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DissolutionTeam other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DissolutionTeam other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
